## 哈希表 + 模拟

我们可以使用「哈希表」将所属组大小相同的下标放到一起。假设组大小为 $k$ 的元素有 $m$ 个，然后我们再将这 $m$ 个元素按照 $k$ 个一组进行划分即可。

代码：

* []

```Java
class Solution {
    public List<List<Integer>> groupThePeople(int[] gs) {
        Map<Integer, List<Integer>> map = new HashMap<>();
        for (int i = 0; i < gs.length; i++) {
            List<Integer> list = map.getOrDefault(gs[i], new ArrayList<>());
            list.add(i);
            map.put(gs[i], list);
        }
        List<List<Integer>> ans = new ArrayList<>();
        for (int k : map.keySet()) {
            List<Integer> list = map.get(k), cur = new ArrayList<>();
            for (int i = 0; i < list.size(); i++) {
                cur.add(list.get(i));
                if (cur.size() == k) {
                    ans.add(cur);
                    cur = new ArrayList<>();
                }
            }
        }
        return ans;
    }
}
```

* []

```Typescript
function groupThePeople(gs: number[]): number[][] {
    const map = new Map<number, Array<number>>()
    for (let i = 0; i < gs.length; i++) {
        if (!map.has(gs[i])) map.set(gs[i], new Array<number>())
        map.get(gs[i]).push(i)
    }
    const ans = new Array<Array<number>>()
    for (let k of map.keys()) {
        let list = map.get(k), cur = new Array<number>()
        for (let i = 0; i < list.length; i++) {
            cur.push(list[i])
            if (cur.length == k) {
                ans.push(cur)
                cur = new Array<number>()
            }
        }
    }
    return ans
};
```

* 时间复杂度：$O(n)$
* 空间复杂度：$O(n)$

---

## 最后

**如果有帮助到你，请给题解点个赞和收藏，让更多的人看到 ~ ("▔□▔)/**

也欢迎你 [关注我](https://oscimg.oschina.net/oscnet/up-19688dc1af05cf8bdea43b2a863038ab9e5.png) 和 加入我们的[「组队打卡」](https://leetcode-cn.com/u/ac_oier/)小群 ，提供写「证明」&「思路」的高质量题解。

所有题解已经加入 [刷题指南](https://github.com/SharingSource/LogicStack-LeetCode/wiki)，欢迎 star 哦 ~
